{"version":3,"sources":["Home/Script/Navbar.js","Home/Images/art.png","Home/Script/Landing.js","Marketplace/Script/Browse.js","Marketplace/Script/CreateNft.js","Marketplace/Script/MyItems.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","handleLandingClick","setCurrentPage","handleCreateClick","handleBrowseClick","handleMyItemsClick","state","className","href","this","account","onClick","slice","connectWallet","Component","Landing","src","ArtPicture","alt","componentDidMount","marketplace","nft","_itemList","_tokenList","_tokenIds","methods","getItemCounter","call","totalItems","i","getItemById","item","tokenURI","tokenID","axios","get","contents","data","console","log","description","itemSold","push","setState","itemList","tokenList","tokenIds","purchaseItem","marketItem","marketItemID","send","from","value","price","then","receipt","window","location","reload","transactionHash","catch","e","code","length","map","count","image","name","web3","utils","fromWei","seller","client","ipfsHttpClient","uploadFile","event","preventDefault","file","target","files","size","add","result","path","createNFT","loading","obj","JSON","stringify","mintNft","uri","mint","required","onChange","type","rows","as","placeholder","maxLength","style","resize","role","getUserTokens","allItems","myItems","getItems","createSale","index","_tokenId","flag","approve","marketAddress","toWei","nftList","min","App","saved","localStorage","getItem","loadWeb3","eth","net","getId","getAccounts","accounts","setItem","ethereum","on","bind","_chainId","Web3","enable","currentProvider","alert","loadNftContract","loadMarketplaceContract","abi","RushNft","networkId","nftContractData","networks","nftContract","Contract","address","RushMarketplace","marketplaceContractData","marketplaceContract","disconnect","clear","blogContract","setAccount","_account","_page","currentPage","Browse","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c2c40e1.chunk.js","sourcesContent":["import '../Style/Navbar.css';\nimport React, {Component , useState} from 'react';\n\n\nclass Navbar extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n\n\n    }\n\n    handleLandingClick = () => {\n        this.props.setCurrentPage(\"landing\")\n    }\n    handleCreateClick = () => {\n        this.props.setCurrentPage(\"create\")\n    } \n    handleBrowseClick = () => {\n        this.props.setCurrentPage(\"browse\")\n    }\n    handleMyItemsClick = () => {\n        this.props.setCurrentPage(\"myItems\")\n    }\n\n\n    render() {\n        \n        return (\n            <div className='container-fluid bg-dark text-light border-bottom border-warning pt-2 sticky-top'>\n                <nav className=\"navbar\">\n                    <a className=\"d-flex d-md-block d-none navbar-brand text-light align-items-center justify-content-center text-center\" href=\"#\">\n                        <p className='h4'>Marketplace</p>\n                        <i className='bi bi-app-indicator text-warning h3'></i>\n                    </a>\n                        {this.props.account ?\n                        <div className='d-md-flex align-items-center justify-content-center text-center'>\n                                <button className='nav-button  m-1' onClick={this.handleLandingClick}>Home</button>\n                                <button className='nav-button  m-1' onClick={this.handleBrowseClick}>Browse</button>\n                                <button className='nav-button  m-1' onClick={this.handleCreateClick}>Create</button>\n                                <button className='nav-button  m-1' onClick={this.handleMyItemsClick}>My Items</button>\n\n                            <p className='m-1 fw-bold raleway text-light'>{this.props.account.slice(0,8)}... </p>\n                        </div>\n                        :\n                        <div className='nav-button m-1' onClick={this.props.connectWallet}>\n                            CONNECT WALLET\n                        </div>\n                        }\n                </nav>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/art.dd7f6609.png\";","import '../Style/Landing.css';\nimport ArtPicture from '../Images/art.png';\nimport React, {Component , useState} from 'react';\nimport { urlSource } from 'ipfs-http-client';\n\n\nclass Landing extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n\n\n    }\n\n\n    handleCreateClick = () => {\n        this.props.setCurrentPage(\"create\")\n    } \n    handleBrowseClick = () => {\n        this.props.setCurrentPage(\"browse\")\n    }\n\n\n    render() {\n        \n        return (\n            <div className='container-fluid bg-dark text-light border-bottom border-warning pt-2'>\n                <div className='d-lg-flex align-items-center justify-content-around text-center text-sm-start m-3 p-2'>\n                    <div className='col-1'></div>\n                    {/* Explore & Create Texts*/}\n                    <div className='d-flex flex-column flex-filil align-items-center justify-content-evenly m-2'>\n                        <h1 className='fw-bold text-light'>Discover, collect, and sell extraordinary NFTs</h1>\n                        <h4 className='text-light'>OpenSea is the world's first and largest NFT marketplace</h4>\n                        <div className='d-flex align-items-center justify-content-evenly'>\n                            <button className='land-button m-2 p-1' onClick={this.handleBrowseClick}>Browse</button>\n                            <button className='land-button m-2 p-1' onClick={this.handleCreateClick}>Create</button>\n                        </div>\n                    </div>\n                    {/* Image*/}\n                    <div className='img-thumbnail d-flex flex-fill align-items-center justify-content-center box-img-shadow rounded m-3 p-2'>\n                        <img src={ArtPicture} className=\"w-50 p-2 m-2\" alt=\"...\"></img>\n                    </div>\n                    <div className='col-1'></div>\n\n                </div>\n                <div className='gap-2'></div>\n                {/* Create and Sell your NFT's */}\n                <div className='d-md-flex align-items-center justify-content-around text-center mt-3 m-3 p-1 '>\n                    <div className='col-1'></div>\n                    <div className='d-flex flex-column align-items-center justify-content-center m-1 p-1 text-light text-break border-bottom border-secondary'>\n                        <i className='bi bi-wallet h3 text-warning'></i>\n                        <h5 className='fw-bold'>Set up your wallet</h5>\n                        <p>Once you’ve set up your wallet of choice, connect it to OpenSea by clicking the wallet icon in the top right corner. Learn about the wallets we support.</p>\n                    </div>\n                    <div className='d-flex flex-column align-items-center justify-content-center m-1 p-1 text-light text-break border-bottom border-secondary'>\n                        <i className='bi bi-diagram-3 h3 text-warning'></i>\n                        <h5 className='fw-bold'>Create your collection</h5>\n                        <p>Click My Collections and set up your collection. Add social links, a description, profile & banner images, and set a secondary sales fee.</p>\n                    </div>\n                    <div className='d-flex flex-column align-items-center justify-content-center m-1 p-1 text-light text-break border-bottom border-secondary'>\n                        <i className='bi bi-easel2 h3 text-warning'></i>\n                        <h5 className='fw-bold'>Add your NFTs</h5>\n                        <p>Upload your work (image, video, audio, or 3D art), add a title and description, and customize your NFTs with properties, stats, and unlockable content.</p>\n                    </div>\n                    <div className='d-flex flex-column align-items-center justify-content-center m-1 p-1 text-light text-break border-bottom border-secondary'>\n                        <i className='bi bi-basket h3 text-warning'></i>\n                        <h5 className='fw-bold'>List them for sale</h5>\n                        <p>Choose between auctions, fixed-price listings, and declining-price listings. You choose how you want to sell your NFTs, and we help you sell them!</p>\n                    </div>\n                    <div className='col-1'></div>\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Landing;","import '../Style/CreateNft.css';\nimport React, {Component , useState} from 'react';\nimport axios from 'axios';\n\nclass Landing extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            itemList : [],\n            tokenList : [],\n            tokenIds : []\n        }\n\n\n    }\n\n    componentDidMount = async () => {\n        if (!this.props.marketplace || !this.props.nft) return\n            const _itemList = []\n            const _tokenList = []\n            const _tokenIds = []\n            const totalItems = await this.props.marketplace.methods.getItemCounter().call()\n            for (let i = 0 ; i < totalItems; i++) {\n                let item = await this.props.marketplace.methods.getItemById(i).call()\n                // console.log(item)\n                const tokenURI = await this.props.nft.methods.tokenURI(item.tokenID).call()\n                const contents = (await axios.get(tokenURI)).data\n                console.log(contents.description)\n                if(!item.itemSold) {\n                    _itemList.push(item)\n                    _tokenIds.push(item.tokenID)\n                    _tokenList.push(contents)\n                }\n            }\n            console.log(_itemList)\n            this.setState( { itemList : _itemList , tokenList : _tokenList , tokenIds : _tokenIds} )\n\n            // const _tokenIds = []\n            // for (let i = 0; i < totalItems.length; i++) {\n            //     const tokenURI = await this.props.nft.methods.tokenURI(totalItems[i]).call()\n            //     _tokenIds.push(totalItems[i])\n            //     console.log(tokenURI)\n            //     const contents = (await axios.get(tokenURI)).data\n            //     allItems.push(contents)\n            // }\n            // console.log(allItems)\n            // this.setState( { myItems : allItems , tokenIds : _tokenIds} )\n    }\n\n    purchaseItem = async ( marketItem ) => {\n        if (!this.props.nft || !this.props.marketplace) return\n        const tx = await this.props.marketplace.methods.purchaseItem(marketItem.marketItemID).send( { from : this.props.account , value : marketItem.price} ).then(function(receipt) {\n        console.log(\"Transaction is mined with txHash : \")\n        window.location.reload()\n        console.log(receipt.transactionHash)}).catch((e)=> {\n            console.log(\"Transaction denied by user.\")\n            console.log(e.code)\n        })\n\n    }\n\n\n\n\n    render() {\n        \n        return (\n            <div className='container-fluid bg-dark text-light border-bottom border-warning pt-2 text-center'>\n                <p className='bg-light text-dark fw-bold border border-secondary rounded p-2 m-2'> MARKET ITEMS </p>\n                <div className='row'>\n                {!this.state.itemList.length && <div className='vh-100 d-flex align-items-center justify-content-center'> There are no items in the market. </div>}\n                {this.state.itemList.map((item , count) => (\n                    <div className='col-md-4 col-6 ' key = {count}>                    \n                        <div className=\"card text-dark p-1 ms-3 m-3 \">\n                            <img src={this.state.tokenList[count].image} className=\"img-thumbnail card-img-top\" alt=\"...\"/>\n                            <div className=\"card-body\">\n                                <p className=\"card-title h3\">{this.state.tokenList[count].name}</p>\n                                <p className=\"card-title h6\">Token Id : {item.tokenID}</p>\n                                <p className=\"card-text\"> {this.state.tokenList[count].description} </p>\n                                <p className=\"card-title h6\">Price : {this.props.web3.utils.fromWei(item.price)} ETH</p>\n                                <button className=\"btn btn-primary\" onClick={() => this.purchaseItem( item )}>Purchase</button>\n                                <p className=\"card-text\">Seller : {item.seller}</p>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Landing;","import '../Style/CreateNft.css';\nimport React, {Component , useState} from 'react';\n\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\n\nconst client = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\n\nclass Landing extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            name : '',\n            description : '',\n            image : '',\n            loading : false\n        }\n\n\n    }\n\n    uploadFile = async (event) => {\n        event.preventDefault()\n        const file = event.target.files[0]\n        if (typeof file !== 'undefined') {\n            console.log(file.size)\n          try {\n            const result = await client.add(file)\n            console.log(result)\n            this.setState({ image : `https://ipfs.infura.io/ipfs/${result.path}` })\n            console.log(this.state.image)\n          } catch (error){\n            console.log(\"ipfs image upload error: \", error)\n          }\n        } else {\n            console.log(\"No file.\")\n        }\n    }\n\n    createNFT = async () => {\n        console.log(\"Inside createNft\")\n        if (!this.state.image || !this.state.name || !this.state.description) return\n        console.log(\"After empty checks.\")\n\n        try{\n            this.setState( {loading : true} )\n\n            const image = this.state.image\n            const name = this.state.name\n            const description = this.state.description\n            const obj = {name, description, image}\n            const objJSON = JSON.stringify(obj)\n            const result = await client.add(JSON.stringify(obj, null, 4))\n            console.log(result)\n            this.mintNft(result)\n        } catch(error) {\n            console.log(\"ipfs uri upload error: \", error)\n            this.setState( {loading : false} )\n        }\n\n    }\n\n    mintNft = async (result) => {\n\n        console.log(\"inside mintNft\")\n        if (!this.props.nft || !this.props.marketplace) return\n        console.log(\"after mintNft empty checks\")\n        const uri = `https://ipfs.infura.io/ipfs/${result.path}`\n        const tx = await this.props.nft.methods.mint(uri).send( { from : this.props.account} ).then(function(receipt) {\n            console.log(\"Transaction is mined with txHash : \")\n            console.log(receipt.transactionHash)}).catch((e)=> {\n                console.log(\"Transaction denied by user.\")\n                console.log(e.code)\n            })\n        this.setState( {loading : false} )\n\n    }\n\n\n\n    // addPost = async (text) => {\n    //     if (!this.state.blogContract) {\n    //       console.log(\"No contract\")\n    //       return\n    //     }\n    //     if (!text) {\n    //       alert(\"You can't post an empty string.\")\n    //       return\n    //     }\n    \n    //     console.log(text)\n    //     this.setState( {loading : true})\n    //     const cont = \"qwerty\"\n    //     const tx = await this.state.blogContract.methods.postNewPost(text, this.state.account).send({from : this.state.account}).then(function(receipt){\n    //       console.log(\"Transaction is mined with txHash : \")\n    //       console.log(receipt.transactionHash)\n          \n    //     }).catch((e)=>{\n    //         console.log(\"Canceleld by usred\")\n    //         console.log(e.code)\n    //       })\n    //       await this.getAllPosts()\n    //       this.setState( {loading : false})\n    //   }\n    // mintNft = async () => {\n    //     if (!this.state.image || !this.state.price || !this.state.name || !this.state.description) return\n\n    //     try{\n    //         const image = this.state.image\n    //         const price = this.state.price\n    //         const result = await client.add(JSON.stringify(this.state.image, this.state.price, this.state.name, this.state.description))\n    //     //   mintThenList(result)\n    //     } catch(error) {\n    //         console.log(\"ipfs uri upload error: \", error)\n    //     }\n    // }\n\n\n    render() {\n        \n        return (\n            <div className='container-fluid bg-dark text-light border-bottom border-warning pt-2 text-center'>\n                <div className=\"input-group mb-3 align-items-center justify-content-center\">\n                    <div className='d-flex flex-column'>\n                    <div>\n                        <label>File</label>\n                        <input required onChange={this.uploadFile} type=\"file\" className=\"form-control m-1\"/></div>                        \n                    <div>\n                        <label>Name</label>\n                        <input required type=\"text\" className=\"form-control m-1\" rows={10} onChange={(e) => this.setState({ name : e.target.value})} /></div>\n                    <div>\n                        <label>Description</label>\n                        <textarea required size=\"lg\"  as=\"textarea\" placeholder=\"Description\"\n                                  className=\"form-control m-1 text-break h-8rem\"  maxLength={256} \n                                  style={{ resize: \"none\" }}\n                                  onChange={(e) => this.setState({ description : e.target.value})}\n                                  />\n                    </div>\n                    {\n                                    this.state.loading ?\n                                    <div className=\"spinner-border text-primary\" role=\"status\">\n                                        <span className=\"visually-hidden\">Loading...</span>\n                                    </div>\n                                    :\n                                    <div>\n                                        <a href=\"#\" className=\"btn btn-primary\" onClick={() => this.createNFT( )}>Create</a>\n                                    </div>\n                                \n                                }\n                </div>\n            </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Landing;","import '../Style/MyItems.css';\nimport React, {Component , useState} from 'react';\nimport axios from 'axios';\nimport BigNumber from 'bignumber.js';\n\nclass Landing extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            nftList : [],\n            myItems : [],\n            tokenIds : [],\n            price : null,\n            loading : false\n        }\n\n\n    }\n    \n\n    componentDidMount = async () => {\n        if (!this.props.marketplace || !this.props.nft) return\n            const totalItems = await this.props.nft.methods.getUserTokens(this.props.account).call()\n            const allItems = []\n            const _tokenIds = []\n            for (let i = 0; i < totalItems.length; i++) {\n                const tokenURI = await this.props.nft.methods.tokenURI(totalItems[i]).call()\n                _tokenIds.push(totalItems[i])\n                console.log(tokenURI)\n                const contents = (await axios.get(tokenURI)).data\n                allItems.push(contents)\n            }\n            console.log(allItems)\n            this.setState( { myItems : allItems , tokenIds : _tokenIds} )\n    }\n\n\n    getItems = async () => {\n        if (!this.props.marketplace || !this.props.nft) return\n            const totalItems = await this.props.nft.methods.getUserTokens(this.props.account).call()\n            const allItems = []\n            for (let i = 0; i < totalItems.length; i++) {\n                const tokenURI = await this.props.nft.methods.tokenURI(totalItems[i]).call()\n                console.log(tokenURI)\n                const contents = (await axios.get(tokenURI)).data\n                allItems.push(contents)\n            }\n            console.log(allItems)\n            this.setState( { myItems : allItems } )\n    }\n\n    createSale = async (index) => {\n        if (!this.props.marketplace || !this.props.nft) return\n        this.setState( {loading : true} )\n        const _tokenId = this.state.tokenIds[index]\n        console.log(\"index is : \" + index)\n        console.log(\"Token Id is  : \" + _tokenId)\n        console.log(this.state.tokenIds)\n        let flag = false\n        const approveTx = await this.props.nft.methods.approve(this.props.marketAddress, _tokenId).send( { from : this.props.account} ).then(function(receipt) {\n\n            console.log(\"Transaction is mined with txHash : \")\n            console.log(receipt.transactionHash)}).catch((e)=> {\n                this.setState( {loading : false} )\n                console.log(\"Transaction denied by user.\")\n                flag = true\n\n        })\n\n\n\n\n\n        var price = this.props.web3.utils.toWei(this.state.price);\n\n\n        \n\n        const createSaleTx = await this.props.marketplace.methods.createSale(_tokenId, price).send( { from : this.props.account} ).then(function(receipt) {\n\n            console.log(\"Transaction is mined with txHash : \")\n            console.log(receipt.transactionHash)}).catch((e)=> {\n                this.setState( {loading : false} )\n                console.log(\"Transaction denied by user.\")\n\n        })\n        \n        this.setState( {loading : false} )\n        if (!flag) {\n            window.location.reload()\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div className='container-fluid bg-dark text-light border-bottom border-warning pt-2 text-center'>\n                <p className='bg-light text-dark fw-bold border border-secondary rounded p-2 m-2'> MY ITEMS </p>\n                <div className='row'>\n                {!this.state.myItems.length && <div className='vh-100 d-flex align-items-center justify-content-center'> You have no items. </div>}\n                {this.state.myItems.map((item , count) => (\n                    <div className='col-md-4 col-6 ' key = {count}>                    \n                        <div className=\"card text-dark p-1 ms-3 m-3 \">\n                            <img src={item.image} className=\"img-thumbnail card-img-top\" alt=\"...\"/>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">{item.name}</h5>\n                                <p className=\"card-text\">{item.description}</p>\n                                <div>\n                                    <label>Price</label>\n                                    <input required type=\"number\" min={0} className=\"form-control m-1\" \n                                    onChange={(e) => this.setState({ price : e.target.value})}/>\n                                </div>\n                                {\n                                    this.state.loading ?\n                                    <div className=\"spinner-border text-primary\" role=\"status\">\n                                        <span className=\"visually-hidden\">Loading...</span>\n                                    </div>\n                                    :\n                                    <div>\n                                        <a href=\"#\" className=\"btn btn-primary\" onClick={() => this.createSale( count )}>Create Sale</a>\n                                    </div>\n                                \n                                }\n                            </div>\n                        </div>\n                    </div>\n                ))}\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Landing;","import './App.css';\nimport React, {Component , useState} from 'react';\nimport Web3 from 'web3';\n\nimport RushMarketplace from './abis/RushMarketplace.json';\nimport RushNft from './abis/RushNft.json';\n\n\nimport Navbar from './Home/Script/Navbar.js';\nimport Landing from './Home/Script/Landing';\n\n\nimport Browse from './Marketplace/Script/Browse.js';\nimport Create from './Marketplace/Script/CreateNft.js';\nimport MyItems from './Marketplace/Script/MyItems.js';\n\n\n\nclass App extends Component {\n\n    componentDidMount = async () => {\n        \n        const saved = window.localStorage.getItem(\"account\");\n\n\n        const initialValue = saved;\n        if (initialValue) {\n            await this.connectWallet()\n        }\n    }\n\n    connectWallet = async () => {\n        await this.loadWeb3()\n        const networkId = await this.state.web3.eth.net.getId()\n        // if (networkId !== 3) {\n        //     alert(\"Please switch to Ropsten Test Network.\")\n        //     return\n        // }\n        const accounts = await this.state.web3.eth.getAccounts()\n        this.setState({ account: accounts[0] })\n        window.localStorage.setItem(\"account\", accounts[0])\n\n        window.ethereum.on('accountsChanged', function (accounts) {\n            window.location.reload()\n            const account = accounts[0]\n            window.localStorage.setItem(\"account\", accounts[0])\n            this.setState({ account })\n        }.bind(this));\n        window.ethereum.on('chainChanged', (_chainId) => \n            window.location.reload()\n        )\n\n        console.log(window.web3)\n    }\n\n    loadWeb3 = async () => {\n        if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum)\n        const web3 = window.web3\n        this.setState({ web3 })\n\n        \n        console.log(\"load contracts\")\n\n        await window.ethereum.enable()\n        }\n        else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n        window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n        this.loadNftContract()\n        this.loadMarketplaceContract()\n    }\n\n    loadNftContract =  async () => {\n        if (!this.state.web3) {\n            console.log(\"Web3 is not defined\")\n            return\n        }\n        const abi = RushNft.abi\n        const networkId = await this.state.web3.eth.net.getId()\n        const nftContractData = RushNft.networks[networkId]\n    \n        const nftContract = new this.state.web3.eth.Contract(abi, nftContractData.address)\n        \n        // window.localStorage.setItem(\"blogContract\", JSON.stringify(blogContract))\n        \n        this.setState({ nftContract })\n    \n    }\n\n    loadMarketplaceContract =  async () => {\n        if (!this.state.web3) {\n            console.log(\"Web3 is not defined\")\n            return\n        }\n        const abi = RushMarketplace.abi\n        const networkId = await this.state.web3.eth.net.getId()\n        const marketplaceContractData = RushMarketplace.networks[networkId]\n    \n        const marketAddress = marketplaceContractData.address\n        const marketplaceContract = new this.state.web3.eth.Contract(abi, marketAddress)\n        \n        \n\n        this.setState({ marketplaceContract , marketAddress})\n    \n      }\n\n      disconnect =  () => {\n        window.localStorage.clear()\n        this.setState( {\n          account : null,\n          web3 : null,\n          blogContract : null,\n          marketplaceContract : null,\n          nftContract : null\n        })\n        window.location.reload()\n      }\n    \n\n\n\n    setAccount = async (_account) => { this.setState({account : _account}) }\n    setCurrentPage = (_page) => {this.setState( { currentPage : _page } ) \n        window.localStorage.setItem(\"currentPage\", _page)\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            account : null,\n            web3 : null,\n            marketplaceContract : null,\n            nftContract : null,\n            currentPage : 'landing',\n            marketAddress : null\n        }\n\n\n    }\n\n\n    render() {\n        \n        return (\n        <div>\n            <Navbar account = {this.state.account}\n                    setCurrentPage = {this.setCurrentPage}\n                    connectWallet = {this.connectWallet}\n                    \n            />\n            {\n                this.state.currentPage === \"landing\" &&\n                    <Landing account = {this.state.account}\n                             setCurrentPage = {this.setCurrentPage}\n\n                    />\n            }\n            {\n                this.state.currentPage === \"create\" &&\n                <>\n                    <Create web3 = {this.state.web3}\n                            nft = {this.state.nftContract}\n                            marketplace = {this.state.marketplaceContract}\n                            account = {this.state.account}    \n                    />\n                    <MyItems web3 = {this.state.web3}\n                            nft = {this.state.nftContract}\n                            marketplace = {this.state.marketplaceContract}\n                            account = {this.state.account}    \n                            marketAddress = {this.state.marketAddress}\n                    />\n                </>\n            }\n            {\n                this.state.currentPage === \"browse\" && \n                <Browse web3 = {this.state.web3}\n                        nft = {this.state.nftContract}\n                        marketplace = {this.state.marketplaceContract}\n                        account = {this.state.account}    \n                />\n            }\n            {\n                this.state.currentPage === \"myItems\" && \n                <MyItems web3 = {this.state.web3}\n                        nft = {this.state.nftContract}\n                        marketplace = {this.state.marketplaceContract}\n                        account = {this.state.account}\n                        marketAddress = {this.state.marketAddress}\n\n                />\n            }\n                \n\n            \n        </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}